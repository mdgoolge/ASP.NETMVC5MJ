<style>
    svg, canvas { width: 100%; height: 150px; border: 1px solid grey; }
    .a3 { fill: none; stroke: blue; stroke-width: 1; }
</style>
<h3 class="btn-success">曲线</h3>
<h4>用svg实现</h4>
<div class="row">
    <div class="col-md-6">
        <svg>
            <path d="M 50,100 Q 125,-80 200,100" stroke="blue" stroke-width="5" fill="none" />
            @{  int x1 = 275, y1 = 75, radius = 50; }
            <desc>外部圆</desc>
            <circle class="a3" cx="@x1" cy="@y1" r="@radius"></circle>
            <desc>嘴</desc>
            <path class="a3" d="M @(x1-20),@(y1+5) Q @x1,@(y1+50) @(x1+20),@(y1+5)"></path>
            <desc>左眼</desc>
            <circle class="a3" cx="@(x1-15)" cy="@(y1-15)" r="5"></circle>
            <desc>右眼</desc>
            <circle class="a3" cx="@(x1+15)" cy="@(y1-15)" r="5"></circle>
        </svg>
    </div>
    <div class="col-md-6">
        <svg width="12cm" height="6cm" viewBox="0 0 1200 600">
            <path d="M200,300 Q400,50 600,300 T1000,300"
                  fill="none" stroke="red" stroke-width="5" />
            <!-- End points -->
            <g fill="black">
                <circle cx="200" cy="300" r="10" />
                <circle cx="600" cy="300" r="10" />
                <circle cx="1000" cy="300" r="10" />
            </g>
            <!-- Control points and lines from end points to control points -->
            <g fill="#888888">
                <circle cx="400" cy="50" r="10" />
                <circle cx="800" cy="550" r="10" />
            </g>
            <path d="M200,300 L400,50 L600,300
           L800,550 L1000,300"
                  fill="none" stroke="#888888" stroke-width="2" />
        </svg>
    </div>
</div>
<h4>用canvas实现</h4>
<canvas id="c1"></canvas>
<script>
    var v = $("#c1");
    v.attr("width", v.css("width"));
    v.attr("height", v.css("height"));
    var ctx = document.getElementById("c1").getContext("2d");

    var x1 = 15, y1 = 10, width = 100, height = 100;
    x1 += width + 50;
    ctx.beginPath();
    ctx.arc(x1, 75, 50, 0, Math.PI * 2, true); //外部圆
    ctx.moveTo(x1 + 35, 75);
    ctx.arc(x1, 75, 35, 0, Math.PI, false);   // 嘴 (顺时针)
    ctx.moveTo(x1 - 10, 65);
    ctx.arc(x1 - 15, 65, 5, 0, Math.PI * 2, true);  //左眼
    ctx.moveTo(x1 + 15, 65);
    ctx.arc(x1 + 15, 65, 5, 0, Math.PI * 2, true);  //右眼
    ctx.stroke();

</script>

